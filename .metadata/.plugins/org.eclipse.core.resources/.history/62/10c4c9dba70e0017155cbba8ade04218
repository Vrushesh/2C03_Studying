public class SequentialSearchST<Key, Value> {
	private Node first;
	
	private class Node{
		Key key;
		Value val;
		Node next;
		
		public Node(Key key, Value val, Node next){
			this.key = key;
			this.val = val;
			this.next = next;
		}
	}
	
	public Value get(Key key){
		for (Node x = first; x != null; x = x.next){
			if (key.equals(x.key)){
				return x.val;
			}
		}
		return null;
	}
	
	public void put(Key key, Value val){
		for (Node x = first; x != null; x = x.next){
			if (key.equals(x.key)){
				x.val = val;
				return;
			}
		}
		
		first = new Node(key, val, first);
	}
	
	public int size(){
		int counter = 0;
		for (Node x = first; x != null; x = x.next){
			counter++;
		}
		return counter;
	}
	
	public Iterable<Key> keys(){
        Queue<Key> queue = new Queue<Key>();
        for (Node x = first; x != null; x = x.next)
            queue.enqueue(x.key);
        return queue;
	}
	
	public Iterable<Key> keys(Key lo, Key hi){
		
	}
	
	public void delete(Key key){
		
	}
}
